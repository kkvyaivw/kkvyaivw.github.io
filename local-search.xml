<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>个人纪录 25.8.18~25.8.21</title>
    <link href="/2025/08/21/rec2508-1/"/>
    <url>/2025/08/21/rec2508-1/</url>
    
    <content type="html"><![CDATA[<p>8.17 晚从浙江回汕头。当天回家后得知自己将会被分到重点班，非常高兴，因为这样开学后我就可以稳稳地拿到班级垫底的成绩[thumb_up]。</p><h3 id="8-18"><a href="#8-18" class="headerlink" title="8.18"></a>8.18</h3><p>早上 10:30 左右到达 jz 集训。</p><p>到机房里，找了 2 遍没看到xsy。最后听到有人在叫我才看到。我真是眼瞎。</p><p>然后发现机房电脑使用了网络白名单，只有oj和百度qq能访问。电脑的cpu是2017年的老东西，ram8gb只有6.5gb可用，还在用win7系统。编译速度极慢(3s+)。网络极卡。访问baidu.com都要加载5秒。</p><p>11:30 去吃午饭。我选择了肠粉。一条猪肉肠粉 6 块。等了半个小时。分量很少吃不饱而且基本没肉。</p><p>吃完来到宿舍铺床。发现和我同个宿舍的都是小孩[thumb_up]。</p><p>然后回到机房。打了一场比赛，被吊打了。t2 把 或最小生成树 看成 异或最小生成树 ，赛后看题解才发现。。。</p><p>晚餐吃了煮面好像。调味一般。</p><p>回宿舍。宿舍的浴室、厕所、洗手池都是一层楼公用的。排了很久（可能约半个小时）的队才排到浴室洗澡。洗澡的时候xsy说他洗到一半依托答辩从隔壁浴室漂过来。这一点都不好笑。我洗澡的时候也闻到了一股恶臭。</p><p>当时我和 xsy 都有点后悔选择读 jz 。感觉各方面都不怎么样。</p><p>在电脑室待到 10 点回宿舍。洗手池公用有点麻烦。要洗手必须走到卫生间。</p><p>睡得还行。</p><h3 id="8-19"><a href="#8-19" class="headerlink" title="8.19"></a>8.19</h3><p>早上吃了一个菜包一个肉包一碗豆浆。5块。皮很难吃。馅也难吃。感觉是速冻的。</p><p>早上好像是在补题吧。挺无聊的，用不了 ai 挺不习惯的。</p><p>然后大概9点的时候还全校停电了。</p><p>过了半个小时左右学校的发电器启动了，可以用电但是不能开空调。热死了。</p><p>中午电才恢复。</p><p>中午排队吃肠粉。点了一条牛肉肠粉加一条猪肉肠粉，加豆芽，共15块。加了豆芽变好吃多了。豆芽还是免费的。牛肉肠粉好评。有肉。由于刷脸机坏了等各种原因，我和 xsy 排了45分钟才拿到。</p><p>下午在打洛谷比赛。只切了两道。邱班人均3道，太强了。</p><p>晚上吃了米饭加排骨加菜后面忘了。10.8元。相当的划算。</p><p>有了前一天排队洗澡的经验，这一天花在排队上的时间缩短了很多。</p><h3 id="8-20"><a href="#8-20" class="headerlink" title="8.20"></a>8.20</h3><p>早餐吃了叉烧包。4块。不好吃。</p><p>早上在cf随机找题好像。</p><p>只记得 11:20 就到食堂排队抢肠粉。然后我们拿到了第一和第二的两块牌。只等了10分钟肠粉就做好了。</p><p>下午忘记在做什么了。好像是在探索怎么摸鱼。xsy 发现了一个神奇网站：mbd.baidu.com （可以刷视频）。虽然视频很无聊。</p><p>晚上在玩百度deepseek。我们用从它搜索了“calmic”(某神秘字符串)。搜出了一个英国厕所用具品牌。</p><p><img src="/img/img_250822_1.png" alt="与hzh的聊天纪录"></p><p>还用它给每个人的用户名生成头像，非常唐。</p><p>xsy 热爱 ys ，所以他让 ai 生成了 ys 风格的 calmic 头像。看上去非常有趣，所以我把它作为了我的洛谷头像。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">x</span>*<span class="hljs-attribute">y</span>正在数他的元神金数数了两分钟得出结论<span class="hljs-number">30</span>金起步糖他说没人练度比他高暴打球半<span class="hljs-built_in">voidsolve</span>() &#123;元神怎么你了yuanshenzenmnileyuanshen元神怎么你了我就爱万元神&#125;她现在在生产元神头像节选<span class="hljs-attribute">x</span>*<span class="hljs-attribute">y</span>昨天打的程序现在沉迷于百度视频<br></code></pre></td></tr></table></figure><h3 id="8-21"><a href="#8-21" class="headerlink" title="8.21"></a>8.21</h3><p>早上由于包子太难吃了，所以我吃了两根肉肠两根串。11块。贵死。</p><p>早上边洛谷私信摸鱼边打noip&#x2F;csps模拟，结果一道都没做。本来 t1 是一眼的，但是打到一半去摸鱼了，导致思路忘了。</p><p>中午吃煮粿条加猪肉加肉卷加鱼饺。14块。肉多但是味道一般。猪肉挺柴的。</p><p>下午似乎也是有一半时间在摸鱼。看 sevenki 的唐人博客摸鱼的时候，老师在我后面视歼了两分钟，我一直没发现。</p><p>17:00回家。</p>]]></content>
    
    
    
    <tags>
      
      <tag>个人纪录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 学习笔记，函数</title>
    <link href="/2025/08/17/py3/"/>
    <url>/2025/08/17/py3/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文未完成</p></blockquote><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>定义格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">function_name</span>(<span class="hljs-params">a</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">isinstance</span>(a,(<span class="hljs-built_in">int</span>,<span class="hljs-built_in">float</span>)) <span class="hljs-comment">#参数检查，如果不是整数或浮点数</span><br>    <span class="hljs-keyword">raise</span> TypeError(<span class="hljs-string">&#x27;14514&#x27;</span>)<br>    <span class="hljs-keyword">return</span> -a<br></code></pre></td></tr></table></figure><h3 id="pass语句"><a href="#pass语句" class="headerlink" title="pass语句"></a>pass语句</h3><p>占位语句，当还没想好要写什么的时候用</p><h3 id="引用函数"><a href="#引用函数" class="headerlink" title="引用函数"></a>引用函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> <span class="hljs-number">114514.</span>py <span class="hljs-keyword">import</span> function_name<br></code></pre></td></tr></table></figure><h3 id="返回多个值"><a href="#返回多个值" class="headerlink" title="返回多个值"></a>返回多个值</h3><p>实质上是返回了 tuple</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a,b</span>):<br>    <span class="hljs-keyword">return</span> a+<span class="hljs-number">1</span>,b+<span class="hljs-number">1</span><br><br>a,b = func(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a,b,c=<span class="hljs-string">&#x27;114514&#x27;</span>,d=<span class="hljs-number">1919810</span></span>):<br>    <span class="hljs-built_in">print</span>(c)<br>func(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,d=<span class="hljs-number">114514</span>)<br></code></pre></td></tr></table></figure><p>当默认参数为可变的时，需要注意，如果定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">lst=[]</span>):<br>    lst.append(<span class="hljs-number">114514</span>)<br><span class="hljs-keyword">return</span> lst<br></code></pre></td></tr></table></figure><p>这时候会出现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>func()<br>[<span class="hljs-number">114514</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>func()<br>[<span class="hljs-number">114514</span>, <span class="hljs-number">114514</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>func()<br>[<span class="hljs-number">114514</span>, <span class="hljs-number">114514</span>, <span class="hljs-number">114514</span>]<br></code></pre></td></tr></table></figure><p>所以应改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">lst=<span class="hljs-literal">None</span></span>):<br><span class="hljs-keyword">if</span> lst <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        L=[]<br>    lst.append(<span class="hljs-number">114514</span>)<br>    <span class="hljs-keyword">return</span> lst<br></code></pre></td></tr></table></figure><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">*lst</span>):<br><span class="hljs-meta">... </span>    <span class="hljs-keyword">pass</span><br>...<br><span class="hljs-meta">&gt;&gt;&gt; </span>func(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>lst=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>func(*lst)<br></code></pre></td></tr></table></figure><h3 id="命名关键字参数"><a href="#命名关键字参数" class="headerlink" title="命名关键字参数"></a>命名关键字参数</h3><p>1. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">a,b,**c</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;a1&#x27;</span> <span class="hljs-keyword">in</span> c:<br>        <span class="hljs-built_in">print</span>(c)<br>gpx=&#123;<span class="hljs-string">&#x27;a1&#x27;</span>:<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;a2&#x27;</span>:<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;a3&#x27;</span>:<span class="hljs-number">3</span>&#125;<br>func(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,**gpx)<br>func(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,a1=<span class="hljs-number">1</span>,a2=<span class="hljs-number">2</span>,a3=<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><ol start="2"><li></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 学习笔记，条件语句，循环语句</title>
    <link href="/2025/08/16/py2/"/>
    <url>/2025/08/16/py2/</url>
    
    <content type="html"><![CDATA[<blockquote><p> 参考 廖雪峰的python教程，本文只有作者能看懂</p></blockquote><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><h3 id="if-elif-else"><a href="#if-elif-else" class="headerlink" title="if elif else"></a>if elif else</h3><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">bool</span>语句:<br>    ？？？;<br><span class="hljs-keyword">elif</span> <span class="hljs-built_in">bool</span>语句:<br>    ？？？;<br><span class="hljs-keyword">else</span> :<br>    ？？？;<br></code></pre></td></tr></table></figure><p>简写：非空字符串、非空list为True</p><h3 id="match-case"><a href="#match-case" class="headerlink" title="match case"></a>match case</h3><p>相当于 switch case。</p><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">match</span> opt:<br>    <span class="hljs-keyword">case</span> x <span class="hljs-keyword">if</span> x&lt;<span class="hljs-number">0</span>:<br>        匹配多个值，并且把opt赋值到x。<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        不用<span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        <span class="hljs-number">114514</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>        不用分号我都忘了。。。<br>    <span class="hljs-keyword">case</span> _:<br>        其他情况<br></code></pre></td></tr></table></figure><h3 id="列表匹配"><a href="#列表匹配" class="headerlink" title="列表匹配"></a>列表匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">match</span> lst:<br>    <span class="hljs-keyword">case</span> [<span class="hljs-string">&#x27;114514&#x27;</span>]:<br>        当只有<span class="hljs-string">&#x27;114514&#x27;</span>时<br>    <span class="hljs-keyword">case</span>[<span class="hljs-string">&#x27;114514&#x27;</span>,<span class="hljs-built_in">str</span>,*str2]:<br>        当第一个元素为<span class="hljs-string">&#x27;114514&#x27;</span>时，第二个元素赋值到<span class="hljs-built_in">str</span>，第三个及后面的元素赋值到str2。<br></code></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="for-x-in-list"><a href="#for-x-in-list" class="headerlink" title="for x in list"></a>for x in list</h3><p> x 在 list 内循环枚举。</p><p>range(n) 生成从0到n-1的自然数的list。</p><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">101</span>)<br><span class="hljs-built_in">print</span>(x)<br></code></pre></td></tr></table></figure><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>似乎与c++相同。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-number">114514</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-number">1919810</span>)<br></code></pre></td></tr></table></figure><h3 id="break-continue"><a href="#break-continue" class="headerlink" title="break&amp;continue"></a>break&amp;continue</h3><p>似乎与c++相同。</p><h3 id="结束死循环程序"><a href="#结束死循环程序" class="headerlink" title="结束死循环程序"></a>结束死循环程序</h3><p>Ctrl+C，和cmd结束进程快捷键一样。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 学习笔记，list，tuple，dict，set</title>
    <link href="/2025/08/16/py1/"/>
    <url>/2025/08/16/py1/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考 廖雪峰的python教程，本文只有作者能看懂</p></blockquote><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><p>定义：<code>a=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]</code></p><p>获取长度 <code> len(a)</code></p><p>访问：正数：a[i]；倒数：a[-i];</p><p>list内数据类型可以不同，list元素也可以是list</p><h3 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h3><p>不能更改的list。</p><p>定义： <code>a=(1,2,3)</code></p><p>定义空tuple：<code>a=()</code></p><p>只有一个元素的tuple：a&#x3D;(1,)（必须加<code>,</code>，不然会产生歧义。</p><p>tuple内套list时，tuple内list可以改变。</p><h3 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h3><p>同 C++ map。但是它好像和通过哈希实现的，所以复杂度O(1)。如果哈希冲突时间复杂度会退化。</p><p>定义&amp;查询&amp;修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">mp=&#123;&#125;<br>mp=&#123;<span class="hljs-string">&quot;str1&quot;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;str2&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;str3&#x27;</span>:<span class="hljs-number">3</span>&#125;<br><span class="hljs-built_in">print</span>(mp[<span class="hljs-string">&quot;str1&quot;</span>]) <span class="hljs-comment">#如果&quot;str1&quot;不存在会报错</span><br>mp[<span class="hljs-string">&quot;str1&quot;</span>]=<span class="hljs-number">114514</span> <span class="hljs-comment">#修改或插入</span><br></code></pre></td></tr></table></figure><p>判断是否存在：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;114514&#x27;</span> <span class="hljs-keyword">in</span> mp <span class="hljs-comment">#返回bool</span><br>mp.get(<span class="hljs-string">&#x27;114514&#x27;</span>) <span class="hljs-comment">#若没有则返回 none，有则返回对应的值</span><br></code></pre></td></tr></table></figure><p>删除：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">mp.pop(<span class="hljs-string">&quot;key&quot;</span>) <br></code></pre></td></tr></table></figure><h3 id="可变对象与不可变对象"><a href="#可变对象与不可变对象" class="headerlink" title="可变对象与不可变对象"></a>可变对象与不可变对象</h3><p>int、string 等都是不可变的，可以作为key。</p><p>list 是可变的，不可以作为key。</p><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>与c++相同。</p><p>定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">s=<span class="hljs-built_in">set</span>() <span class="hljs-comment">#空set</span><br>s=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125; <br>s=<span class="hljs-built_in">set</span>([<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]) <span class="hljs-comment">#通过 list 赋值</span><br>s=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>&#125; <span class="hljs-comment">#自动去重，相当于 &#123;1,4,5&#125;</span><br></code></pre></td></tr></table></figure><p>插入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">s.add(<span class="hljs-number">9</span>) <span class="hljs-comment">#重复插入没有效果</span><br></code></pre></td></tr></table></figure><p>支持交集、并集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">s1=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br>s2=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0</span>&#125;;<br>s1&amp;s2 <span class="hljs-comment"># &#123;1&#125;</span><br>s1 | s2 <span class="hljs-comment">#&#123;1,4,5,8,9,0&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>完成了对博客的搭建</title>
    <link href="/2025/08/03/test/"/>
    <url>/2025/08/03/test/</url>
    
    <content type="html"><![CDATA[<ul><li><p>个人博客已成功搭建完成，虽然还有部分内容和功能有待完善。</p><p>特别感谢 <a href="https://www.luogu.com.cn/article/payxm0u7">洛谷专栏：Hexo 搭建个人博客</a> 的教程。浏览了多篇相关文章后，发现其他教程或多或少存在不足，唯独这篇指导清晰，助我顺利完成搭建。感谢 ChatGPT 与 Grok 帮我修改原本跟诗一样的语言。</p><p>博客基于 GitHub Pages 和 Hexo 构建，目前采用 Hexo 默认主题 Landscape（25.8.4:更换为vivia主题）。未来计划将之前创作的内容逐步迁移至此。</p><hr><p><strong>备忘录：</strong></p><ul><li><p>同步至 GitHub 的命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo clean<br>hexo <span class="hljs-selector-tag">g</span><br>hexo d<br></code></pre></td></tr></table></figure></li><li><p>本地预览命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo clean<br>hexo <span class="hljs-selector-tag">g</span><br>hexo s<br></code></pre></td></tr></table></figure></li><li><p>文章存储路径：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">\source\_posts<br></code></pre></td></tr></table></figure></li><li><p>新建文章：</p><pre><code class="hljs">hexo new &quot;title&quot;</code></pre></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
