<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python 学习笔记，条件语句，循环语句</title>
    <link href="/2025/08/16/py2/"/>
    <url>/2025/08/16/py2/</url>
    
    <content type="html"><![CDATA[<blockquote><p> 参考 廖雪峰的python教程，本文只有作者能看懂</p></blockquote><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><h3 id="if-elif-else"><a href="#if-elif-else" class="headerlink" title="if elif else"></a>if elif else</h3><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">bool</span>语句:<br>    ？？？;<br><span class="hljs-keyword">elif</span> <span class="hljs-built_in">bool</span>语句:<br>    ？？？;<br><span class="hljs-keyword">else</span> :<br>    ？？？;<br></code></pre></td></tr></table></figure><p>简写：非空字符串、非空list为True</p><h3 id="match-case"><a href="#match-case" class="headerlink" title="match case"></a>match case</h3><p>相当于 switch case。</p><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">match</span> opt:<br>    <span class="hljs-keyword">case</span> x <span class="hljs-keyword">if</span> x&lt;<span class="hljs-number">0</span>:<br>        匹配多个值，并且把opt赋值到x。<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        不用<span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        <span class="hljs-number">114514</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>        不用分号我都忘了。。。<br>    <span class="hljs-keyword">case</span> _:<br>        其他情况<br></code></pre></td></tr></table></figure><h3 id="列表匹配"><a href="#列表匹配" class="headerlink" title="列表匹配"></a>列表匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">match</span> lst:<br>    <span class="hljs-keyword">case</span> [<span class="hljs-string">&#x27;114514&#x27;</span>]:<br>        当只有<span class="hljs-string">&#x27;114514&#x27;</span>时<br>    <span class="hljs-keyword">case</span>[<span class="hljs-string">&#x27;114514&#x27;</span>,<span class="hljs-built_in">str</span>,*str2]:<br>        当第一个元素为<span class="hljs-string">&#x27;114514&#x27;</span>时，第二个元素赋值到<span class="hljs-built_in">str</span>，第三个及后面的元素赋值到str2。<br></code></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="for-x-in-list"><a href="#for-x-in-list" class="headerlink" title="for x in list"></a>for x in list</h3><p> x 在 list 内循环枚举。</p><p>range(n) 生成从0到n-1的自然数的list。</p><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">101</span>)<br><span class="hljs-built_in">print</span>(x)<br></code></pre></td></tr></table></figure><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>似乎与c++相同。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-number">114514</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-number">1919810</span>)<br></code></pre></td></tr></table></figure><h3 id="break-continue"><a href="#break-continue" class="headerlink" title="break&amp;continue"></a>break&amp;continue</h3><p>似乎与c++相同。</p><h3 id="结束死循环程序"><a href="#结束死循环程序" class="headerlink" title="结束死循环程序"></a>结束死循环程序</h3><p>Ctrl+C，和cmd结束进程快捷键一样。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 学习笔记，list，turple，dict，set</title>
    <link href="/2025/08/16/py1/"/>
    <url>/2025/08/16/py1/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考 廖雪峰的python教程，本文只有作者能看懂</p></blockquote><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><p>定义：<code>a=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]</code></p><p>获取长度 <code> len(a)</code></p><p>访问：正数：a[i]；倒数：a[-i];</p><p>list内数据类型可以不同，list元素也可以是list</p><h3 id="turple"><a href="#turple" class="headerlink" title="turple"></a>turple</h3><p>不能更改的list。</p><p>定义： <code>a=(1,2,3)</code></p><p>定义空turple：<code>a=()</code></p><p>只有一个元素的turple：a&#x3D;(1,)（必须加<code>,</code>，不然会产生歧义。</p><p>turple内套list时，turple内list可以改变。</p><h3 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h3><p>同 C++ map。但是它好像和通过哈希实现的，所以复杂度O(1)。如果哈希冲突时间复杂度会退化。</p><p>定义&amp;查询&amp;修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">mp=&#123;&#125;<br>mp=&#123;<span class="hljs-string">&quot;str1&quot;</span>:<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;str2&#x27;</span>:<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;str3&#x27;</span>:<span class="hljs-number">3</span>&#125;<br><span class="hljs-built_in">print</span>(mp[<span class="hljs-string">&quot;str1&quot;</span>]) <span class="hljs-comment">#如果&quot;str1&quot;不存在会报错</span><br>mp[<span class="hljs-string">&quot;str1&quot;</span>]=<span class="hljs-number">114514</span> <span class="hljs-comment">#修改或插入</span><br></code></pre></td></tr></table></figure><p>判断是否存在：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;114514&#x27;</span> <span class="hljs-keyword">in</span> mp <span class="hljs-comment">#返回bool</span><br>mp.get(<span class="hljs-string">&#x27;114514&#x27;</span>) <span class="hljs-comment">#若没有则返回 none，有则返回对应的值</span><br></code></pre></td></tr></table></figure><p>删除：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">mp.pop(<span class="hljs-string">&quot;key&quot;</span>) <br></code></pre></td></tr></table></figure><h3 id="可变对象与不可变对象"><a href="#可变对象与不可变对象" class="headerlink" title="可变对象与不可变对象"></a>可变对象与不可变对象</h3><p>int、string 等都是不可变的，可以作为key。</p><p>list 是可变的，不可以作为key。</p><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>与c++相同。</p><p>定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">s=<span class="hljs-built_in">set</span>() <span class="hljs-comment">#空set</span><br>s=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125; <br>s=<span class="hljs-built_in">set</span>([<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]) <span class="hljs-comment">#通过 list 赋值</span><br>s=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>&#125; <span class="hljs-comment">#自动去重，相当于 &#123;1,4,5&#125;</span><br></code></pre></td></tr></table></figure><p>插入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">s.add(<span class="hljs-number">9</span>) <span class="hljs-comment">#重复插入没有效果</span><br></code></pre></td></tr></table></figure><p>支持交集、并集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">s1=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br>s2=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0</span>&#125;;<br>s1&amp;s2 <span class="hljs-comment"># &#123;1&#125;</span><br>s1 | s2 <span class="hljs-comment">#&#123;1,4,5,8,9,0&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>完成了对博客的搭建</title>
    <link href="/2025/08/03/test/"/>
    <url>/2025/08/03/test/</url>
    
    <content type="html"><![CDATA[<ul><li><p>个人博客已成功搭建完成，虽然还有部分内容和功能有待完善。</p><p>特别感谢 <a href="https://www.luogu.com.cn/article/payxm0u7">洛谷专栏：Hexo 搭建个人博客</a> 的教程。浏览了多篇相关文章后，发现其他教程或多或少存在不足，唯独这篇指导清晰，助我顺利完成搭建。感谢 ChatGPT 与 Grok 帮我修改原本跟诗一样的语言。</p><p>博客基于 GitHub Pages 和 Hexo 构建，目前采用 Hexo 默认主题 Landscape（25.8.4:更换为vivia主题）。未来计划将之前创作的内容逐步迁移至此。</p><hr><p><strong>备忘录：</strong></p><ul><li><p>同步至 GitHub 的命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo clean<br>hexo <span class="hljs-selector-tag">g</span><br>hexo d<br></code></pre></td></tr></table></figure></li><li><p>本地预览命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo clean<br>hexo <span class="hljs-selector-tag">g</span><br>hexo s<br></code></pre></td></tr></table></figure></li><li><p>文章存储路径：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">\source\_posts<br></code></pre></td></tr></table></figure></li><li><p>新建文章：</p><pre><code class="hljs">hexo new &quot;title&quot;</code></pre></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
